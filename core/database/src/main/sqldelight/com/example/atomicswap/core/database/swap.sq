CREATE TABLE SwapEntity (
    swapId TEXT PRIMARY KEY NOT NULL,
    makeId TEXT NOT NULL,
    takeId TEXT NOT NULL,
    timestamp INTEGER NOT NULL,
    takerId TEXT NOT NULL,
    makerId TEXT NOT NULL,
    swapState TEXT NOT NULL,
    
    -- Taker Token
    takerTokenId TEXT NOT NULL,
    takerTokenSymbol TEXT NOT NULL,
    takerTokenName TEXT NOT NULL,
    takerTokenIconUrl TEXT NOT NULL,
    takerTokenContractAddress TEXT,
    takerTokenBlockchain TEXT NOT NULL,
    takerTokenDecimal INTEGER NOT NULL,
    
    -- Maker Token
    makerTokenId TEXT NOT NULL,
    makerTokenSymbol TEXT NOT NULL,
    makerTokenName TEXT NOT NULL,
    makerTokenIconUrl TEXT NOT NULL,
    makerTokenContractAddress TEXT,
    makerTokenBlockchain TEXT NOT NULL,
    makerTokenDecimal INTEGER NOT NULL,
    
    -- Addresses
    takerRefundAddress TEXT NOT NULL,
    takerRefundAddressId TEXT,
    makerRefundAddress TEXT NOT NULL,
    makerRefundAddressId TEXT,
    takerRedeemAddress TEXT NOT NULL,
    takerRedeemAddressId TEXT,
    makerRedeemAddress TEXT NOT NULL,
    makerRedeemAddressId TEXT,
    
    -- Secret
    secret TEXT,
    secretHash TEXT NOT NULL,
    
    -- Time
    takerRefundTime INTEGER NOT NULL,
    makerRefundTime INTEGER NOT NULL,
    takerSafeTxTime INTEGER,
    makerSafeTxTime INTEGER,
    
    -- Transactions
    takerSafeTx TEXT,
    makerSafeTx TEXT,
    takerRedeemTx TEXT,
    makerRedeemTx TEXT,
    takerRefundTx TEXT,
    makerRefundTx TEXT,
    
    -- Amounts (stored as TEXT to preserve precision)
    takerSafeAmount TEXT NOT NULL,
    makerSafeAmount TEXT NOT NULL,
    makerExactAmount TEXT NOT NULL,
    takerExactAmount TEXT NOT NULL,
    makerStartAmount TEXT NOT NULL,
    takerStartAmount TEXT NOT NULL,
    makerFinalAmount TEXT NOT NULL,
    takerFinalAmount TEXT NOT NULL
);

-- Queries
selectAll:
SELECT * FROM SwapEntity ORDER BY timestamp DESC;

selectById:
SELECT * FROM SwapEntity WHERE swapId = ?;

insert:
INSERT OR REPLACE INTO SwapEntity VALUES ?;

deleteAll:
DELETE FROM SwapEntity;

deleteHistory:
DELETE FROM SwapEntity WHERE swapState IN ('RESPONDER_REDEEMED', 'REFUNDED');

deleteById:
DELETE FROM SwapEntity WHERE swapId = ?;